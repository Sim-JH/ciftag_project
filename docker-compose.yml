version: '2.18.1'

services:
    dev:
        privileged: true
        restart: always
        image: ciftag-module
        build:
            context: .
            dockerfile: Dockerfile
        container_name: ciftag-dev-module
        env_file:
            - docker/env/module.env
        volumes:
            - /mnt/ciftag/datadrive:/datadrive
            - $PWD/ciftag:/src/module/ciftag
            - /tmp/.X11-unix:/tmp/.X11-unix
        environment:
            - RUN_ON=local
            - SERVER_TYPE=dev
            - DISPLAY=$DISPLAY
        command: supervisord -c /etc/supervisord.conf
        ports:
            - 5000:5000
            - 5555:5555
        networks:
            - ciftag_network
        depends_on:
            mq:
                condition: service_healthy
            db:
                condition: service_healthy
#    module:
#        privileged: true
#        restart: always
#        image: ciftag-module
#        build:
#            context: .
#            dockerfile: Dockerfile
#        container_name: ciftag-module
#        env_file:
#            - docker/env/module.env
#        volumes:
#            - /mnt/ciftag/datadrive:/datadrive
#            - $PWD/ciftag:/src/module/ciftag
#        environment:
#            - RUN_ON=local
#        command: supervisord -c /etc/supervisord.conf
#        ports:
#            - 5000:5000
#        networks:
#            - ciftag_network
    airflow-webserver:
        image: ciftag-airflow
        build:
            context: airflow
            dockerfile: Dockerfile
        container_name: ciftag-airflow-webserver
        env_file:
            - $PWD/airflow/.env
        volumes:
            - $PWD/airflow/dags:/opt/airflow/dags
            - $PWD/airflow/scripts:/opt/airflow/scripts
            - $PWD/airflow/logs:/opt/airflow/logs
            - $PWD/airflow/plugins:/opt/airflow/plugins
        ports:
            - "8080:8080"
        networks:
            - ciftag_network
        command: airflow webserver
        depends_on:
            mq:
                condition: service_healthy
            db:
                condition: service_healthy
        healthcheck:
            test: [ "CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1" ]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 40s
    airflow-scheduler:
        image: ciftag-airflow
        build:
            context: airflow
            dockerfile: Dockerfile
        container_name: ciftag-airflow-scheduler
        env_file:
            - airflow/.env
        volumes:
            - $PWD/airflow/dags:/opt/airflow/dags
            - $PWD/airflow/scripts:/opt/airflow/scripts
            - $PWD/airflow/logs:/opt/airflow/logs
            - $PWD/airflow/plugins:/opt/airflow/plugins
        networks:
            - ciftag_network
        command: airflow scheduler
        depends_on:
            mq:
                condition: service_healthy
            db:
                condition: service_healthy
            airflow-webserver:
                condition: service_healthy
        healthcheck:
            test: [ "CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname $(hostname) || exit 1" ]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 40s
    db:
        restart: always
        image: ciftag-postgres
        build:
            context: docker/db
            dockerfile: Dockerfile
        container_name: ciftag-postgres
        env_file:
            - docker/env/postgres.env
        volumes:
            - ciftag-db:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
            - ciftag_network
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U admin" ]
            interval: 10s
            timeout: 5s
            retries: 5
    mq:
        restart: always
        image: ciftag-mq
        build:
            context: docker/mq
            dockerfile: Dockerfile
        container_name: ciftag-mq
        ports:
            - 6379:6379
        env_file:
            - docker/env/redis.env
        networks:
            - ciftag_network
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 5
    elasticsearch:
        restart: always
        image: ciftag-es
        build:
            context: docker/elastic
            dockerfile: Dockerfile
        container_name: ciftag-es
        environment:
            - discovery.type=single-node
            - ES_JAVA_OPTS=-Xms512m -Xmx512m
            - xpack.security.enabled=false  # 추후 SSL 설정
        volumes:
            - ciftag-es:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
        env_file:
            - docker/env/elastic.env
        networks:
            - ciftag_network
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cat/health || exit 1" ]
            interval: 30s
            timeout: 10s
            retries: 5
    kibana:
        image: ciftag_kibana
        build:
            context: docker/kibana
            dockerfile: Dockerfile
        container_name: ciftag-kibana
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
            - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
        ports:
            - "5601:5601"
        env_file:
            - docker/env/kibana.env
        networks:
            - ciftag_network
        depends_on:
            elasticsearch:
                condition: service_healthy

volumes:
    ciftag-db:
        name: ciftag-db
    ciftag-es:
        name: ciftag-es
networks:
  ciftag_network:
    driver: bridge
    