version: '2.18.1'

services:
    dev:
        privileged: true
        restart: always
        image: ciftag-module
        build:
            context: .
            dockerfile: Dockerfile
        container_name: ciftag-dev-module
        env_file:
            - docker/env/module.env
        volumes:
            - /mnt/ciftag/datadrive:/datadrive
            - $PWD/ciftag:/src/module/ciftag
            - /tmp/.X11-unix:/tmp/.X11-unix
        environment:
            - RUN_ON=local
            - SERVER_TYPE=dev
            - DISPLAY=$DISPLAY
        command: supervisord -c /etc/supervisord.conf
        ports:
            - 5000:5000
            - 5555:5555
        networks:
            - ciftag_network
        depends_on:
            mq:
                condition: service_healthy
            db:
                condition: service_healthy

#    module:
#        privileged: true
#        restart: always
#        image: ciftag-module
#        build:
#            context: .
#            dockerfile: Dockerfile
#        container_name: ciftag-module
#        env_file:
#            - docker/env/module.env
#        volumes:
#            - /mnt/ciftag/datadrive:/datadrive
#            - $PWD/ciftag:/src/module/ciftag
#        environment:
#            - RUN_ON=local
#        command: supervisord -c /etc/supervisord.conf
#        ports:
#            - 5000:5000
#        networks:
#            - ciftag_network

#    fargate:
#        image: ecr
#        privileged: true
#        command: sh init.sh
#        environment:
#            - RUN_ON=aws
#            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
#            - AWS_DEFAULT_REGION=ap-northeast-2
#        deploy:
#            replicas: 1
    db:
        restart: always
        image: ciftag-postgres
        build:
            context: docker/db
            dockerfile: Dockerfile
        container_name: ciftag-postgres
        env_file:
            - docker/env/postgres.env
        volumes:
            - ciftag-db:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
            - ciftag_network
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U admin" ]
            interval: 10s
            timeout: 5s
            retries: 5
    mq:
        restart: always
        image: ciftag-mq
        build:
            context: docker/mq
            dockerfile: Dockerfile
        container_name: ciftag-mq
        ports:
            - 6379:6379
        env_file:
            - docker/env/redis.env
        networks:
            - ciftag_network
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    ciftag-db:
        name: ciftag-db

networks:
  ciftag_network:
    driver: bridge
    