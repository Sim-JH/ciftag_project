; workers
[program:celery]
command = celery -A ciftag.celery_app worker -E --concurrency=5 --loglevel=DEBUG -n worker@%%h
directory = %(here)s
startsecs = 5
autostart = true
autorestart = true
stopwaitsecs = 300
stderr_logfile = /src/module/logs/supervisord/celery_stderr.log
stdout_logfile = /src/module/logs/supervisord/celery_stdout.log

[program:task]
command = celery -A ciftag.celery_app worker --concurrency=10 -Q task --loglevel=info -n worker@%%h
directory = %(here)s
startsecs = 5
autostart = true
autorestart = true
stopwaitsecs = 300
stderr_logfile = /src/module/logs/supervisord/task_stderr.log
stdout_logfile = /src/module/logs/supervisord/task_stdout.log

; [program:beat]
; command = celery -A ciftag.celery_app beat --loglevel=DEBUG
; directory = %(here)s
; startsecs = 5
; autostart = true
; autorestart = true
; stopwaitsecs = 300
; stderr_logfile = /src/module/logs/supervisord/beat_stderr.log
; stdout_logfile = /src/module/logs/supervisord/beat_stdout.log

; 모니터링
[program:flower]
command = celery -A ciftag.celery_app flower --port=5555 --loglevel=INFO
directory = %(here)s
startsecs = 5
autostart = true
autorestart = true
stderr_logfile = /src/module/logs/supervisord/flower_stderr.log
stdout_logfile = /src/module/logs/supervisord/flower_stdout.log

; CLI
[unix_http_server]
file=/tmp/supervisor.sock   ; supervisor가 사용하는 unix 소켓 파일
chmod=0700                  ; 소켓 파일에 대한 권한 설정

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; supervisorctl에서 사용할 소켓 경로

[supervisord]
loglevel = info
nodaemon = true
user = root
logfile = /src/module/logs/supervisord/supervisor.log