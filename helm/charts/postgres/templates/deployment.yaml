apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-env
                # kubectl create configmap ciftag-postgres-env --from-env-file=docker/env/postgres.env -n ciftag
                # configmap.yaml을 쓸 경우 파일 참조의 경우는 helm 내부에 파일이 위치할 경우만 가능
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            {{- if .Values.healthcheck.enabled }}
            exec:
              command: {{ .Values.healthcheck.testCommand }}
            initialDelaySeconds: 10
            periodSeconds: {{ .Values.healthcheck.intervalSeconds }}
            timeoutSeconds: {{ .Values.healthcheck.timeoutSeconds }}
            failureThreshold: {{ .Values.healthcheck.failureThreshold }}
            {{- end }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
